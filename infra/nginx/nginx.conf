# ==============================================================================
# NGINX Configuration for Pathfinder Local API Gateway
# ==============================================================================
# This file acts as the central entry point for all incoming traffic, routing
# requests to the appropriate backend microservice container.
# ==============================================================================

events {
    # Defines the number of connections a worker process can handle.
    # A good starting point for local development.
    worker_connections 1024;
}

http {
    # Set a higher limit for request body sizes (e.g., for file uploads)
    client_max_body_size 20M;

    # Define a server block that listens on the standard HTTP port 80.
    # This is the port exposed by the Docker container.
    server {
        listen 80;

        # ----------------------------------------------------------------------
        # Root Path Health Check (Fixes "index.html not found" error)
        # ----------------------------------------------------------------------
        # Provides a simple, immediate response to confirm the gateway is running.
        location = / {
            return 200 '{"status": "Pathfinder API Gateway is running"}\n';
            add_header Content-Type application/json;
        }

        # ----------------------------------------------------------------------
        # Microservice Routes
        # ----------------------------------------------------------------------
        # Each 'location' block corresponds to a microservice's API prefix.
        # The proxy_pass directive forwards the request to the correct service
        # container using Docker's internal DNS (service name).

        location /api/auth/ {
            proxy_pass http://auth-service:8001;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/roadmaps/ {
            proxy_pass http://roadmap-service:8002;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        location /api/topics/ {
            proxy_pass http://topic-service:8003;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/notes/ {
            proxy_pass http://notes-service:8004; # Assuming this port
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/learning-tools/ {
            proxy_pass http://learning-tools-service:8005; # Assuming this port
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/analytics/ {
            proxy_pass http://analytics-service:8008; # Assuming this port
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # ----------------------------------------------------------------------
        # WebSocket Routes (for AI Tutor)
        # ----------------------------------------------------------------------
        # This special configuration is required to correctly proxy WebSocket
        # connections, which are long-lived and require a protocol upgrade.

        location /ws/ {
            proxy_pass http://ai-tutor-service:8006; # Assuming this port
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # The AI Generation service might not need a direct route if it's only
        # triggered internally via the message queue (RabbitMQ). If you decide
        # you need a direct API call to it, you would add a location block here.
    }
}